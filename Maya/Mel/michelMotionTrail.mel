//------------------------------------------------------------// michelMotionTrail.mel// Created feb 2009.// Interactive Motion Trail script designed and programmed by Michel Bidart : michel.bidart@gmail.com// Built upon original Motion Trail Engine Written by Cameron Fielding : cameron.fielding@bvg.com//// This script creates a lot of scriptjobs that may cause your computer to slow down when several motion// trails are on the same scene. In order to avoid this, use the michelDeleteMTrail.mel script. It will// delete all Motion Trails on the scene, along with the scriptjobs. // // This script comes with NO WARRANTY; use at your own risk.//global proc michelMotionTrail(){if (`window -exists mMTrailWin`)	deleteUI -window mMTrailWin;				if (`windowPref -exists mMTrailWin`) 	windowPref -remove mMTrailWin;	window -t "mMotionTrail" -w 562 -h 350 mMTrailWin;formLayout mMtopForm;rowColumnLayout -nc 3 -cw 1 65 -cw 2 150 -cw 3 100 mMrow1;	text -l "Time Range";	radioCollection mMradio1;		$mMradio1_1 = `radioButton -label "Start/End"`;		$mMradio1_2 = `radioButton -label "Time Slider"`;	radioCollection -e -select $mMradio1_2 mMradio1;	setParent mMtopForm;rowColumnLayout -nc 2 -cw 1 55 -cw 2 80 mMrow2;	text -l "Start Time ";	textField -text "1" mMstart;	text -l " End Time ";	textField -text "30" mMend;setParent mMtopForm;frameLayout -bs "out" -h 2 mMSep1;setParent mMtopForm;	 	floatSliderGrp -pre 2 -label "Spacer display size" -field true -minValue 0.01 -maxValue 10 -v 0.5 mMslide;		checkBox -l " Template the trail's group" -v 0 mMcbox;	colorIndexSliderGrp -label "Trail Colour" -min 0 -max 31 -value 14 -en true mMslide2;	checkBox -l " Use object's own colour for the trail" -v 0 mMcbox2;	checkBox -l " Connect trail to object's visibility" -v 0 mMcbox3;	checkBox -l " Use Control Spheres as spacer objects" -v 1 mMcbox4;		checkBox -l " Color keyframes differently" -v 1 mMcbox5;	colorIndexSliderGrp -label "Spacer Colour" -min 0 -max 31 -value 17 -en true mMslide3;	colorIndexSliderGrp -label "KeyFrame Colour" -min 0 -max 31 -value 18 -en true mMslide4;rowColumnLayout -nc 3 -cw 1 180 -cw 2 180 -cw 3 180 mMbutrow;button -l "Create mMotion Trail" -c "getmMPrefs 1" -h 27 ;button -l "Apply" -c "getmMPrefs 0";button -l "Close" -c "deleteUI mMTrailWin";setParent mMtopForm;formLayout -e	-attachForm mMrow1 "left" 100	-attachForm mMrow1 "top" 3	-attachForm mMrow2 "left" 111	-attachForm mMrow2 "top" 20	-attachForm mMSep1 "left" 0	-attachForm mMSep1 "right" 0	-attachForm mMSep1 "top" 70	-attachForm mMslide "left" 25	-attachForm mMslide "top" 78	-attachForm mMslide2 "left" 25	-attachForm mMslide2 "top" 104	-attachForm mMslide2 "right" 140	-attachForm mMslide3 "left" 25	-attachForm mMslide3 "top" 131		-attachForm mMslide4 "left" 25	-attachForm mMslide4 "top" 159	-attachForm mMcbox "left" 164	-attachForm mMcbox "top" 205	-attachForm mMcbox2 "left" 164	-attachForm mMcbox2 "top" 187	-attachForm mMcbox3 "left" 164	-attachForm mMcbox3 "top" 224	-attachForm mMcbox4 "left" 164	-attachForm mMcbox4 "top" 243	-attachForm mMcbox5 "left" 164	-attachForm mMcbox5 "top" 262	-attachForm mMbutrow "left" 5	-attachForm mMbutrow "bottom" 5mMtopForm;showWindow;window -e -h 337 mMTrailWin;}// proc to launch the main function with flags from the UI //global proc getmMPrefs( int $closemMwin ){	int $startTime, $endTime, $template;	float $scale;	string  $trailObjects[];		if ( `radioCollection -q -sl mMradio1` == "radioButton1" )	{		$startTime = `textField -q -text mMstart`;		$endTime = `textField -q -text mMend`;	}	else	{		$startTime = `playbackOptions -q -min`;		$endTime = `playbackOptions -q -max`;	}	$template = `checkBox -q -v mMcbox`;	$scale = `floatSliderGrp -q -v mMslide`;	$trailObjects = `ls -sl -fl`;	for ( $trailObject in $trailObjects )	{			if ( `objExists ( $trailObject + "_extraNode_t" + $startTime + $endTime )` == 0 )		{			mMotionTrail $startTime $endTime $scale $trailObject $template;		}		else		{			catch ( error ( "a trail already exists for " + $trailObject + " from frames " + $startTime + " to " + $endTime ));		}	}	if ( $closemMwin == 1 )	{		deleteUI mMTrailWin;	}}// main trail creating proc //global proc mMotionTrail ( int $startTime, int $endTime, float $scale, string $trailObject, int $template ){string $originalName = $trailObject;int $totalTime = $endTime - $startTime;$totalTime ++;	string $groupArray[];	clear $groupArray;	int $gAClock = 0;		group -w -em -n ( $trailObject + "_extraNode_t" + $startTime + $endTime );		pointConstraint -offset 0 0 0 -weight 1 $trailObject ( $trailObject + "_extraNode_t" + $startTime + $endTime );		$groupArray[$gAClock] = ( $trailObject + "_extraNode_t" + $startTime + $endTime );		$gAClock ++;		$trailObject = ( $trailObject + "_extraNode_t" + $startTime + $endTime );				group -w -em -n ( $originalName + "_hiddenTrailObject_t" + $startTime + $endTime  );		connectAttr ( $originalName + "_extraNode_t" + $startTime + $endTime +  ".translateX" ) ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateX" );		connectAttr ( $originalName + "_extraNode_t" + $startTime + $endTime +  ".translateY" ) ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateY" );		connectAttr ( $originalName + "_extraNode_t" + $startTime + $endTime +  ".translateZ" ) ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateZ" );		$groupArray[$gAClock] = ( $originalName + "_hiddenTrailObject_t" + $startTime + $endTime  );		$gAClock ++;		float $tPosX[], $tPosY[], $tPosZ[];		clear $tPosX $tPosY $tPosZ;		int $mMclock = $startTime;		for ( $i = 0; $i < $totalTime; $i ++ )		{			$tPosX[$i] = `getAttr -t $mMclock ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateX" )`;			$tPosY[$i] = `getAttr -t $mMclock ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateY" )`;			$tPosZ[$i] = `getAttr -t $mMclock ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateZ" )`;			$mMclock ++;		}					string $evalMe = "curve -d 1 ";			int $mMclock = $startTime;			for ( $i = 0; $i < `size $tPosX`; $i ++ )			{					$evalMe = ( $evalMe + "-p " + $tPosX[$i] + " " + $tPosY[$i] + " " + $tPosZ[$i] + " " );			}				$evalMe = ( $evalMe + "-n " + $trailObject + "_mMotionTrail_curve" );			eval $evalMe;				$groupArray[$gAClock] = ( $trailObject + "_mMotionTrail_curve" );			$gAClock ++;			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.tx" );			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.ty" );			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.tz" );			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.rx" );			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.ry" );			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.rz" );			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.sx" );			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.sy" );			setAttr -lock true ( $trailObject + "_mMotionTrail_curve.sz" );			setAttr ( $trailObject + "_mMotionTrail_curve.overrideEnabled" ) 1;			setAttr ( $trailObject + "_mMotionTrail_curve.overrideColor" ) ( (`colorIndexSliderGrp -q -value mMslide2`) - 1 );				if ( `checkBox -q -v mMcbox2` == 1 || ($originalName + ".overrideEnabled") == 1 )				{					setAttr ( $trailObject + "_mMotionTrail_curve.overrideColor" ) ( `getAttr ( $originalName + ".overrideColor" )`);				}			string $findShape[];			$findShape = `listRelatives ( $trailObject + "_mMotionTrail_curve" )`;			rename $findShape[0] ( $trailObject + "_mMotionTrailShape" );									string $evalMeExpr = "";			int $mMclock = $startTime;			for ( $i = 0; $i < `size $tPosX `; $i ++ )			{				$evalMeExpr = ( $evalMeExpr + "setAttr \\\"" + $trailObject + "_mMotionTrailShape" + ".controlPoints[" + $i + "].xValue\\\" ( `getAttr -t " + $mMclock + " " + $trailObject + ".tx`);" );				$evalMeExpr = ( $evalMeExpr + "setAttr \\\"" + $trailObject + "_mMotionTrailShape" + ".controlPoints[" + $i + "].yValue\\\" ( `getAttr -t " + $mMclock + " " + $trailObject + ".ty`);" );				$evalMeExpr = ( $evalMeExpr + "setAttr \\\"" + $trailObject + "_mMotionTrailShape" + ".controlPoints[" + $i + "].zValue\\\" ( `getAttr -t " + $mMclock + " " + $trailObject + ".tz`);" );								$mMclock ++;			}			int $randTag = `rand 999999`;						$evalMeExpr = ( "$cmtsc" + $randTag + "_sJob1 = `scriptJob -kws -cu true -ac \"" + $originalName + "_hiddenTrailObject_t" + $startTime + $endTime + ".translate\" \"" + 				"global int $cmtscDG" + $randTag + "_hiddenTrailObject_t" +  $startTime + $endTime + "r2; $r1 = `currentTime -q`; if ( $r1 == $cmtscDG" + $randTag + "_hiddenTrailObject_t" +  $startTime + $endTime + "r2 ) {" + $evalMeExpr); 						$evalMeExpr = ( $evalMeExpr + " print \\\"\\\";  }else{ $cmtscDG" + $randTag + "_hiddenTrailObject_t" +  $startTime + $endTime + "r2 = `currentTime -q`; } \"`" );			eval $evalMeExpr;						addAttr -ln "mainJob" -at long ($originalName+"_extraNode_t"+$startTime+$endTime+"_mMotionTrail_curve");			$jobEval = ("setAttr(\""+$originalName+"_extraNode_t"+$startTime+$endTime+"_mMotionTrail_curve.mainJob\") $cmtsc");			$jobEval = ($jobEval + $randTag);			$jobEval = ($jobEval + "_sJob1\;");			eval $jobEval;			int $mMclock = $startTime;			for ( $i = 0; $i < `size $tPosX `; $i ++ )			{				$tPosX[$i] = `getAttr -t $startTime ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateX" )`;				$tPosY[$i] = `getAttr -t $startTime ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateY" )`;				$tPosZ[$i] = `getAttr -t $startTime ( $originalName + "_hiddenTrailObject_t" +  $startTime + $endTime + ".translateX" )`;												if ( `checkBox -q -v mMcbox4` == 0 )				{					spaceLocator -n ( $trailObject + "_spacingLocator_" + $mMclock );				}				else				{					curve -d 1 -p 0 3 0 -p 0 2 -2 -p 0 0 -3 -p 0 -2 -2 -p 0 -3 0 -p 0 -2 2 -p 0 0 3 -p 0 2 2 -p 0 3 0 -p 2 2 0 -p 3 0 0 -p 2 -2 0 -p 0 -3 0 -p -2 -2 0 -p -3 0 0 -p -2 2 0 -p 0 3 0 -k 0 -k 1 -k 2 -k 3 -k 4 -k 5 -k 6 -k 7 -k 8 -k 9 -k 10 -k 11 -k 12 -k 13 -k 14 -k 15 -k 16 -n ( $trailObject + "_spacingLocatorObj_" + $mMclock );										setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".overrideShading" ) 0 ;									select ( $trailObject + "_spacingLocatorObj_" + $mMclock );					group -name ( $trailObject + "_spacingLocator_" + $mMclock );									addAttr -ln "endTime" -at long ($trailObject + "_spacingLocatorObj_" + $mMclock);					setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".endTime" ) $endTime;					addAttr -ln "startTime" -at long ($trailObject + "_spacingLocatorObj_" + $mMclock);					setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".startTime" ) $startTime;						addAttr -ln "frameNumber" -at long ($trailObject + "_spacingLocatorObj_" + $mMclock);					setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".frameNumber" ) $mMclock;						addAttr -ln "objectName" -dt "string" ($trailObject + "_spacingLocatorObj_" + $mMclock);					setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".objectName" ) -type "string" $originalName;						addAttr -ln "keyColor" -at long ($trailObject + "_spacingLocatorObj_" + $mMclock);					setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".keyColor" ) `colorIndexSliderGrp -q -value mMslide4`;						addAttr -ln "difColor" -at long ($trailObject + "_spacingLocatorObj_" + $mMclock);					setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".difColor" ) `checkBox -q -v mMcbox5`;						addAttr -ln "nKeyColor" -at long ($trailObject + "_spacingLocatorObj_" + $mMclock);					setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".nKeyColor" ) `colorIndexSliderGrp -q -value mMslide3`;									int $jobNumber = `scriptJob -runOnce true -attributeChange ($trailObject + "_spacingLocatorObj_" + $mMclock+".translate") "updateMTrail"`;						addAttr -ln "scrJobNumber" -at long ($trailObject + "_spacingLocatorObj_" + $mMclock);					setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".scrJobNumber" ) $jobNumber;										scale -r $scale $scale $scale;						//				setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + "Shape.castsShadows") 0;	//				setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + "Shape.receiveShadows") 0;	//				setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + "Shape.motionBlur") 0;	//				setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + "Shape.primaryVisibility") 0;	//				setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + "Shape.smoothShading") 0;	//				setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + "Shape.visibleInReflections") 0;	//				setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + "Shape.visibleInRefractions") 0;					int $hasKey;										if (`checkBox -q -v mMcbox5`)					{						$hasKey = `keyframe -time ($mMclock+":"+$mMclock) -q -kc $originalName`;									}					else					{						$hasKey = 0;					}										setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".overrideEnabled" ) 1;						if ($hasKey == 0)					{						setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".overrideColor" ) ( (`colorIndexSliderGrp -q -value mMslide3`) - 1 );					}					else					{						setAttr ( $trailObject + "_spacingLocatorObj_" + $mMclock + ".overrideColor" ) ( (`colorIndexSliderGrp -q -value mMslide4`) - 1 );					}				}				xform -ws -t $tPosX[$i] $tPosY[$i] $tPosZ[$i];					connectAttr  ( $trailObject + "_mMotionTrailShape" + ".controlPoints[" + $i + "].xValue" ) ( $trailObject + "_spacingLocator_" + $mMclock + ".tx" );				connectAttr  ( $trailObject + "_mMotionTrailShape" + ".controlPoints[" + $i + "].yValue" ) ( $trailObject + "_spacingLocator_" + $mMclock + ".ty" );				connectAttr  ( $trailObject + "_mMotionTrailShape" + ".controlPoints[" + $i + "].zValue" ) ( $trailObject + "_spacingLocator_" + $mMclock + ".tz" );					$groupArray[$gAClock] = ( $trailObject + "_spacingLocator_" + $mMclock );				$gAClock ++;				$mMclock ++;			}		select -r $groupArray;		group -n ( $originalName + "_mMotionTrail_" + $startTime + "to" + $endTime ); 		setAttr ( $originalName + "_mMotionTrail_" + $startTime + "to" + $endTime + ".template") $template;		select -cl;		if ( `checkBox -q -v mMcbox3` == 1 )		{			catch ( `connectAttr ( $originalName + ".visibility" ) ( $originalName + "_mMotionTrail_" + $startTime + "to" + $endTime + ".visibility ") `);		}}global proc int[] mViewportHide (string $Panel[], int $On, int $Setup[]){	string $sList;	string $aList[];	int $OldSet[];	$sList = "strokes,textures,handles,pivots,dimensions,locators";	$sList = ($sList+",dynamicConstraints,nRigids,nCloths,follicles");	$sList = ($sList+",hairSystems,fluids,dynamics,deformers");	$sList = ($sList+",ikHandles,joints,cameras,lights,planes,subdivSurfaces");	$sList = ($sList+",nurbsSurfaces,nurbsCurves,polymeshes");	$aList = stringToStringArray($sList,",");	$size = `size($Panel)`;	for ($i=0;$i<$size;$i++)	{		for ($j=$i*23;$j<(($i+1)*23);$j++) $OldSet[$j] = `modelEditor -q ("-"+ $aList[($j % 23)]) $Panel[$i]`;	}	if ($On)	{		for ($i=0;$i<$size;$i++)		{			modelEditor -e -allObjects 1 $Panel[$i];			for ($j=$i*23;$j<(($i+1)*23);$j++) 			{				print ("\n"+$aList[$j]);				modelEditor -e ("-"+$aList[($j % 23)]) $Setup[$j] $Panel[$i];			}		}	}	else 	{		for ($i=0;$i<$size;$i++) modelEditor -e -allObjects 0 $Panel[$i];	}	return $OldSet;}		global proc updateMTrail(){	undoInfo -swf 0;	$oldsel = `ls -sl`;	$difKey=getAttr($oldsel[0]+".difColor");	$objectName=getAttr($oldsel[0]+".objectName");	$frameNumber=getAttr($oldsel[0]+".frameNumber");	$currentTime = `currentTime -q`;	$startTime=getAttr($oldsel[0]+".startTime");	$endTime=getAttr($oldsel[0]+".endTime");	float $newPosition[3] = `xform -query -translation -wd $oldsel[0]`;	float $oldPosition[3] = `xform -ws -query -translation ($objectName+"_extraNode_t"+$startTime+$endTime+"_spacingLocator_"+$frameNumber)`;	move -localSpace 0 0 0 $oldsel[0];	undoInfo -swf 1;	int $lastSelect = size( $oldsel );	int $mView[];	if ($lastSelect==1)	{		string $panels[];		string $modelPanel[];		int $n = 0;		$panels=`getPanel -vis`;		for ($i=0;$i<`size($panels)`;$i++)		{			if (startString($panels[$i],10)=="modelPanel")			{				$modelPanel[$n]=$panels[$i];				$n++;			}		}		for ($i=0; $i<`size($modelPanel)`;$i++)		{			for ($j=($i*23); $j<(($i+1)*23);$j++) $mView[$j] = 0;		}		$mView = `mViewportHide $modelPanel 0 $mView`;		currentTime -update true $frameNumber;		move -r -ws $newPosition[0] $newPosition[1] $newPosition[2] $objectName;		setAttr ($oldsel[0]+".scrJobNumber") `scriptJob -runOnce true -attributeChange ($oldsel[0]+".translate") "updateMTrail"`;		currentTime -update true $currentTime;		mColorKeys();		$mView = `mViewportHide $modelPanel 1 $mView`;	}}global proc mColorKeys(){	select -cl;	if (`objExists("*_mMotionTrail_curve")`)	{		select -tgl "*_mMotionTrail_curve";	}	if (`objExists("*:*_mMotionTrail_curve")`)	{		select -tgl "*:*_mMotionTrail_curve";	}	$curves=`ls -sl`;	select -cl;	string $crv;	$curvesSize=`size($curves)`;	for ($i=0;$i<$curvesSize;$i++)	{		$nameSize = (`size($curves[$i])`-18);		$trailName=startString($curves[$i],$nameSize);		select ($trailName+"spacingLocatorObj_*");		$objs=`ls -sl`;		select -cl;		$objsSize=`size($objs)`;		for ($j=0; $j<$objsSize;$j++)		{			$difKey=getAttr($objs[$j]+".difColor");			$keyColor=getAttr($objs[$j]+".keyColor");			$nKeyColor=getAttr($objs[$j]+".nKeyColor");			$objectName=getAttr($objs[$j]+".objectName");			$frameNumber=getAttr($objs[$j]+".frameNumber");			$startTime=getAttr($objs[$j]+".startTime");			$endTime=getAttr($objs[$j]+".endTime");			setAttr ( $objs[$j] + ".overrideEnabled" ) 1;			int $hasKey;			if ($difKey)			{				$hasKey = `keyframe -time ($frameNumber+":"+$frameNumber) -q -kc $objectName`;			}			else			{				$hasKey = 0;			}			if ($hasKey == 0)			{				setAttr ( $objs[$j] + ".overrideColor" ) ($nKeyColor - 1 );			}			else			{				setAttr ( $objs[$j] + ".overrideColor" ) ($keyColor - 1 );;			}		}	}}